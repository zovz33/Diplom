<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:UserControl="clr-namespace:PrimeTableware.WPF.CustomControls" 
                    xmlns:Theme="clr-namespace:PrimeTableware.WPF.Styles.Theme"
                    xmlns:sys="clr-namespace:System;assembly=netstandard">

    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
    
    <FontFamily x:Key="ApplicationFont">Times New Roman</FontFamily>
    <!--#region Стили По-умолчанию -->

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource ApplicationFont}" />
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}"  />
        <Setter Property="FontSize"   Value="{Binding FontSize, RelativeSource={RelativeSource Self}}"   />
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>
    
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{DynamicResource ApplicationFont}" />
        <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" Padding="0" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" VerticalContentAlignment="Center" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Margin="2,5,2,2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{StaticResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{DynamicResource ApplicationFont}" />
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource IsMouseOverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource IsPressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type UserControl:RoundAvatarCustomControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserControl:RoundAvatarCustomControl}">
                    <Viewbox>
                        <Ellipse Height="100" Width="100" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderWidth}">
                            <Ellipse.Fill>
                                <ImageBrush Stretch="Uniform" ImageSource="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Image}">
                                    <ImageBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomFactor}" ScaleY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomFactor}"/>
                                            <TranslateTransform X="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Xtranslate}" Y="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ytranslate}" />
                                        </TransformGroup>
                                    </ImageBrush.RelativeTransform>
                                </ImageBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region Стили ListView По-умолчанию -->
    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Name="back" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground"   Value="{DynamicResource InactiveBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="back" Value="#3C3C3C"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}">

        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#0f0f10"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="2" />
                        </Grid.ColumnDefinitions>

                        <Border Name="bck" Grid.Column="0" BorderThickness="0" Height="35">
                            <ContentPresenter x:Name="ContentHeader" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10 0 10 0"  Width="{TemplateBinding Width}"  />
                        </Border>
                        <Thumb Grid.Column="1" x:Name="PART_HeaderGripper"  Cursor="SizeWE">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="#E0E0E0"  />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bck" Property="Background" Value="#3C3C3C"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#endregion-->
    <Style TargetType="TextBlock" x:Key="TitleTextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="50"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--#region Buttons-->

    <Style x:Key="Base1" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#838383"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Brutal Type"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="200"/> 
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Color x:Key="InactiveColor1">#838383</Color>
    <Color x:Key="ActiveColor1">White</Color>


    <Style x:Key="AnimationButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontFamily" Value="Brutal Type"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#838383"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="1" BorderBrush="Transparent" Background="Transparent" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard SpeedRatio="3">
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Foreground).Color"
                                            From="{StaticResource InactiveColor1}"
                                            To="{StaticResource ActiveColor1}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard SpeedRatio="3">
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Foreground).Color"
                                            From="{StaticResource ActiveColor1}"
                                            To="{StaticResource InactiveColor1}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>


    </Style>
    <Style x:Key="NavigationButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource Base1}"> 
        <Setter Property="IsChecked" Value="False"/> 
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border BorderThickness="0" Background="Transparent" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Foreground" Value="#838383"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>

                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="White"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard SpeedRatio="3">
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Foreground).Color"
                                            From="{StaticResource InactiveColor1}"
                                            To="{StaticResource ActiveColor1}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard SpeedRatio="3">
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Foreground).Color"
                                            From="{StaticResource ActiveColor1}"
                                            To="{StaticResource InactiveColor1}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>


    </Style>

    <!--#endregion-->
 
</ResourceDictionary>